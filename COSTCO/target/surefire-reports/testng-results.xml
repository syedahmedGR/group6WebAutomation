<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="24" passed="23">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Framework\group6WebAutomation\COSTCO\target\surefire-reports\html]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
    <line>
      <![CDATA[MouseHover: ]]>
    </line>
  </reporter-output>
  <suite name="Costco Automation Script " duration-ms="1069455" started-at="2019-10-11T16:57:07 EDT" finished-at="2019-10-11T17:14:56 EDT">
    <groups>
    </groups>
    <test name="Costco Home" duration-ms="1069455" started-at="2019-10-11T16:57:07 EDT" finished-at="2019-10-11T17:14:56 EDT">
      <class name="home.TestMouseHover">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="extentSetup" is-config="true" duration-ms="266" started-at="2019-10-11T16:57:06 EDT" finished-at="2019-10-11T16:57:07 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5a50d9fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Framework\group6WebAutomation\COSTCO\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="21292" started-at="2019-10-11T16:57:07 EDT" finished-at="2019-10-11T16:57:28 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="8" started-at="2019-10-11T16:57:28 EDT" finished-at="2019-10-11T16:57:28 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testMouseHover() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testMouseHover()[pri:1, instance:home.TestMouseHover@56ac3a89]" name="testMouseHover" duration-ms="22197" started-at="2019-10-11T16:57:28 EDT" finished-at="2019-10-11T16:57:50 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMouseHover -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="2674" started-at="2019-10-11T16:57:50 EDT" finished-at="2019-10-11T16:57:53 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMouseHover status=SUCCESS method=TestMouseHover.testMouseHover()[pri:1, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T16:57:53 EDT" finished-at="2019-10-11T16:57:53 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="18754" started-at="2019-10-11T16:57:53 EDT" finished-at="2019-10-11T16:58:12 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T16:58:12 EDT" finished-at="2019-10-11T16:58:12 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testBusinessDelivery() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testBusinessDelivery()[pri:2, instance:home.TestMouseHover@56ac3a89]" name="testBusinessDelivery" duration-ms="13606" started-at="2019-10-11T16:58:12 EDT" finished-at="2019-10-11T16:58:25 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testBusinessDelivery -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="1362" started-at="2019-10-11T16:58:25 EDT" finished-at="2019-10-11T16:58:27 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBusinessDelivery status=SUCCESS method=TestMouseHover.testBusinessDelivery()[pri:2, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T16:58:27 EDT" finished-at="2019-10-11T16:58:27 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="20076" started-at="2019-10-11T16:58:27 EDT" finished-at="2019-10-11T16:58:47 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T16:58:47 EDT" finished-at="2019-10-11T16:58:47 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testShopAllDepartments() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testShopAllDepartments()[pri:3, instance:home.TestMouseHover@56ac3a89]" name="testShopAllDepartments" duration-ms="28237" started-at="2019-10-11T16:58:47 EDT" finished-at="2019-10-11T16:59:15 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testShopAllDepartments -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="1186" started-at="2019-10-11T16:59:15 EDT" finished-at="2019-10-11T16:59:16 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testShopAllDepartments status=SUCCESS method=TestMouseHover.testShopAllDepartments()[pri:3, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T16:59:16 EDT" finished-at="2019-10-11T16:59:16 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="19374" started-at="2019-10-11T16:59:16 EDT" finished-at="2019-10-11T16:59:35 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T16:59:35 EDT" finished-at="2019-10-11T16:59:35 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testOptical() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testOptical()[pri:4, instance:home.TestMouseHover@56ac3a89]" name="testOptical" duration-ms="29231" started-at="2019-10-11T16:59:35 EDT" finished-at="2019-10-11T17:00:05 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testOptical -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="1400" started-at="2019-10-11T17:00:05 EDT" finished-at="2019-10-11T17:00:06 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOptical status=SUCCESS method=TestMouseHover.testOptical()[pri:4, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:00:06 EDT" finished-at="2019-10-11T17:00:06 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="19096" started-at="2019-10-11T17:00:06 EDT" finished-at="2019-10-11T17:00:25 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:00:25 EDT" finished-at="2019-10-11T17:00:25 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testPharmacy() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testPharmacy()[pri:5, instance:home.TestMouseHover@56ac3a89]" name="testPharmacy" duration-ms="37443" started-at="2019-10-11T17:00:25 EDT" finished-at="2019-10-11T17:01:03 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPharmacy -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="1224" started-at="2019-10-11T17:01:03 EDT" finished-at="2019-10-11T17:01:04 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPharmacy status=SUCCESS method=TestMouseHover.testPharmacy()[pri:5, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:01:04 EDT" finished-at="2019-10-11T17:01:04 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="21085" started-at="2019-10-11T17:01:04 EDT" finished-at="2019-10-11T17:01:25 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:01:25 EDT" finished-at="2019-10-11T17:01:25 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testServices() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testServices()[pri:6, instance:home.TestMouseHover@56ac3a89]" name="testServices" duration-ms="27633" started-at="2019-10-11T17:01:25 EDT" finished-at="2019-10-11T17:01:53 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testServices -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="1189" started-at="2019-10-11T17:01:53 EDT" finished-at="2019-10-11T17:01:54 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testServices status=SUCCESS method=TestMouseHover.testServices()[pri:6, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:01:54 EDT" finished-at="2019-10-11T17:01:54 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="14915" started-at="2019-10-11T17:01:54 EDT" finished-at="2019-10-11T17:02:09 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:02:09 EDT" finished-at="2019-10-11T17:02:09 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testPhoto() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testPhoto()[pri:7, instance:home.TestMouseHover@56ac3a89]" name="testPhoto" duration-ms="12195" started-at="2019-10-11T17:02:09 EDT" finished-at="2019-10-11T17:02:21 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPhoto -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="1384" started-at="2019-10-11T17:02:21 EDT" finished-at="2019-10-11T17:02:22 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPhoto status=SUCCESS method=TestMouseHover.testPhoto()[pri:7, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:02:22 EDT" finished-at="2019-10-11T17:02:22 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="19545" started-at="2019-10-11T17:02:22 EDT" finished-at="2019-10-11T17:02:42 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:02:42 EDT" finished-at="2019-10-11T17:02:42 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testTravel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testTravel()[pri:8, instance:home.TestMouseHover@56ac3a89]" name="testTravel" duration-ms="12723" started-at="2019-10-11T17:02:42 EDT" finished-at="2019-10-11T17:02:55 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTravel -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="1373" started-at="2019-10-11T17:02:55 EDT" finished-at="2019-10-11T17:02:56 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTravel status=SUCCESS method=TestMouseHover.testTravel()[pri:8, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:02:56 EDT" finished-at="2019-10-11T17:02:56 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="20777" started-at="2019-10-11T17:02:56 EDT" finished-at="2019-10-11T17:03:17 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMembership()[pri:9, instance:home.TestMouseHover@56ac3a89]" name="testMembership" duration-ms="37956" started-at="2019-10-11T17:03:17 EDT" finished-at="2019-10-11T17:03:55 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMembership -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-10-11T17:03:17 EDT" finished-at="2019-10-11T17:03:17 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testMembership() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="2603" started-at="2019-10-11T17:03:55 EDT" finished-at="2019-10-11T17:03:57 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMembership status=SUCCESS method=TestMouseHover.testMembership()[pri:9, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="2" started-at="2019-10-11T17:03:57 EDT" finished-at="2019-10-11T17:03:57 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="20187" started-at="2019-10-11T17:03:57 EDT" finished-at="2019-10-11T17:04:17 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:04:17 EDT" finished-at="2019-10-11T17:04:17 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testChange() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="FAIL" signature="testChange()[pri:10, instance:home.TestMouseHover@56ac3a89]" name="testChange" duration-ms="7863" started-at="2019-10-11T17:04:17 EDT" finished-at="2019-10-11T17:04:25 EDT">
          <exception class="org.openqa.selenium.ElementNotVisibleException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=77.0.3865.90)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-9AFL4G62', ip: '192.168.23.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\MOHAMM~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:53325}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 77.0.3865.90, webStorageEnabled: true}
Session ID: e6ec0c37fe88e31fe954ec598391f4fc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotVisibleException: element not interactable
  (Session info: chrome=77.0.3865.90)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-9AFL4G62', ip: '192.168.23.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\MOHAMM~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:53325}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 77.0.3865.90, webStorageEnabled: true}
Session ID: e6ec0c37fe88e31fe954ec598391f4fc
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at homepage.MouseHover.change(MouseHover.java:117)
at home.TestMouseHover.testChange(TestMouseHover.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotVisibleException -->
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testChange -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="1040" started-at="2019-10-11T17:04:25 EDT" finished-at="2019-10-11T17:04:26 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testChange status=FAILURE method=TestMouseHover.testChange()[pri:10, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:04:26 EDT" finished-at="2019-10-11T17:04:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="18397" started-at="2019-10-11T17:04:26 EDT" finished-at="2019-10-11T17:04:45 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:04:45 EDT" finished-at="2019-10-11T17:04:45 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testLinkUS() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLinkUS()[pri:11, instance:home.TestMouseHover@56ac3a89]" name="testLinkUS" duration-ms="15529" started-at="2019-10-11T17:04:45 EDT" finished-at="2019-10-11T17:05:00 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLinkUS -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="934" started-at="2019-10-11T17:05:00 EDT" finished-at="2019-10-11T17:05:01 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLinkUS status=SUCCESS method=TestMouseHover.testLinkUS()[pri:11, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:05:01 EDT" finished-at="2019-10-11T17:05:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="9705" started-at="2019-10-11T17:05:01 EDT" finished-at="2019-10-11T17:05:11 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-10-11T17:05:11 EDT" finished-at="2019-10-11T17:05:11 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testLinkFindWarehouse() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLinkFindWarehouse()[pri:12, instance:home.TestMouseHover@56ac3a89]" name="testLinkFindWarehouse" duration-ms="6495" started-at="2019-10-11T17:05:11 EDT" finished-at="2019-10-11T17:05:17 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLinkFindWarehouse -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="958" started-at="2019-10-11T17:05:17 EDT" finished-at="2019-10-11T17:05:18 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLinkFindWarehouse status=SUCCESS method=TestMouseHover.testLinkFindWarehouse()[pri:12, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:05:18 EDT" finished-at="2019-10-11T17:05:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="20483" started-at="2019-10-11T17:05:18 EDT" finished-at="2019-10-11T17:05:39 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:05:39 EDT" finished-at="2019-10-11T17:05:39 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageMattresses() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testImageMattresses()[pri:13, instance:home.TestMouseHover@56ac3a89]" name="testImageMattresses" duration-ms="40058" started-at="2019-10-11T17:05:39 EDT" finished-at="2019-10-11T17:06:19 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageMattresses -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="831" started-at="2019-10-11T17:06:19 EDT" finished-at="2019-10-11T17:06:20 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageMattresses status=SUCCESS method=TestMouseHover.testImageMattresses()[pri:13, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:06:20 EDT" finished-at="2019-10-11T17:06:20 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="9061" started-at="2019-10-11T17:06:20 EDT" finished-at="2019-10-11T17:06:29 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:06:29 EDT" finished-at="2019-10-11T17:06:29 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageBathroom() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testImageBathroom()[pri:14, instance:home.TestMouseHover@56ac3a89]" name="testImageBathroom" duration-ms="35301" started-at="2019-10-11T17:06:29 EDT" finished-at="2019-10-11T17:07:04 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageBathroom -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="811" started-at="2019-10-11T17:07:04 EDT" finished-at="2019-10-11T17:07:05 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageBathroom status=SUCCESS method=TestMouseHover.testImageBathroom()[pri:14, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:07:05 EDT" finished-at="2019-10-11T17:07:05 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="17859" started-at="2019-10-11T17:07:05 EDT" finished-at="2019-10-11T17:07:23 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:07:23 EDT" finished-at="2019-10-11T17:07:23 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageAppliances() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testImageAppliances()[pri:15, instance:home.TestMouseHover@56ac3a89]" name="testImageAppliances" duration-ms="36601" started-at="2019-10-11T17:07:23 EDT" finished-at="2019-10-11T17:07:59 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageAppliances -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="852" started-at="2019-10-11T17:07:59 EDT" finished-at="2019-10-11T17:08:00 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageAppliances status=SUCCESS method=TestMouseHover.testImageAppliances()[pri:15, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:08:00 EDT" finished-at="2019-10-11T17:08:00 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="15386" started-at="2019-10-11T17:08:00 EDT" finished-at="2019-10-11T17:08:16 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:08:16 EDT" finished-at="2019-10-11T17:08:16 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageComputers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testImageComputers()[pri:16, instance:home.TestMouseHover@56ac3a89]" name="testImageComputers" duration-ms="36469" started-at="2019-10-11T17:08:16 EDT" finished-at="2019-10-11T17:08:52 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageComputers -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="824" started-at="2019-10-11T17:08:52 EDT" finished-at="2019-10-11T17:08:53 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageComputers status=SUCCESS method=TestMouseHover.testImageComputers()[pri:16, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-10-11T17:08:53 EDT" finished-at="2019-10-11T17:08:53 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="17314" started-at="2019-10-11T17:08:53 EDT" finished-at="2019-10-11T17:09:10 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:09:10 EDT" finished-at="2019-10-11T17:09:10 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testOutdoorHeating() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testOutdoorHeating()[pri:17, instance:home.TestMouseHover@56ac3a89]" name="testOutdoorHeating" duration-ms="36302" started-at="2019-10-11T17:09:10 EDT" finished-at="2019-10-11T17:09:47 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testOutdoorHeating -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="804" started-at="2019-10-11T17:09:47 EDT" finished-at="2019-10-11T17:09:47 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOutdoorHeating status=SUCCESS method=TestMouseHover.testOutdoorHeating()[pri:17, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-10-11T17:09:47 EDT" finished-at="2019-10-11T17:09:47 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="9122" started-at="2019-10-11T17:09:47 EDT" finished-at="2019-10-11T17:09:56 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-10-11T17:09:56 EDT" finished-at="2019-10-11T17:09:56 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testFurnitureEssentials() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testFurnitureEssentials()[pri:18, instance:home.TestMouseHover@56ac3a89]" name="testFurnitureEssentials" duration-ms="26917" started-at="2019-10-11T17:09:56 EDT" finished-at="2019-10-11T17:10:23 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFurnitureEssentials -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="820" started-at="2019-10-11T17:10:23 EDT" finished-at="2019-10-11T17:10:24 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFurnitureEssentials status=SUCCESS method=TestMouseHover.testFurnitureEssentials()[pri:18, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:10:24 EDT" finished-at="2019-10-11T17:10:24 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="9186" started-at="2019-10-11T17:10:24 EDT" finished-at="2019-10-11T17:10:33 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testImageHotTubsAndSpas()[pri:19, instance:home.TestMouseHover@56ac3a89]" name="testImageHotTubsAndSpas" duration-ms="31364" started-at="2019-10-11T17:10:33 EDT" finished-at="2019-10-11T17:11:05 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageHotTubsAndSpas -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-10-11T17:10:33 EDT" finished-at="2019-10-11T17:10:33 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageHotTubsAndSpas() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="808" started-at="2019-10-11T17:11:05 EDT" finished-at="2019-10-11T17:11:06 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageHotTubsAndSpas status=SUCCESS method=TestMouseHover.testImageHotTubsAndSpas()[pri:19, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:11:06 EDT" finished-at="2019-10-11T17:11:06 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="16455" started-at="2019-10-11T17:11:06 EDT" finished-at="2019-10-11T17:11:22 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-10-11T17:11:22 EDT" finished-at="2019-10-11T17:11:22 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageNutrition() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testImageNutrition()[pri:20, instance:home.TestMouseHover@56ac3a89]" name="testImageNutrition" duration-ms="31471" started-at="2019-10-11T17:11:22 EDT" finished-at="2019-10-11T17:11:53 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageNutrition -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="847" started-at="2019-10-11T17:11:53 EDT" finished-at="2019-10-11T17:11:54 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageNutrition status=SUCCESS method=TestMouseHover.testImageNutrition()[pri:20, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:11:54 EDT" finished-at="2019-10-11T17:11:54 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="16520" started-at="2019-10-11T17:11:54 EDT" finished-at="2019-10-11T17:12:11 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:12:11 EDT" finished-at="2019-10-11T17:12:11 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageToys() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testImageToys()[pri:21, instance:home.TestMouseHover@56ac3a89]" name="testImageToys" duration-ms="32563" started-at="2019-10-11T17:12:11 EDT" finished-at="2019-10-11T17:12:43 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageToys -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="850" started-at="2019-10-11T17:12:43 EDT" finished-at="2019-10-11T17:12:44 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageToys status=SUCCESS method=TestMouseHover.testImageToys()[pri:21, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:12:44 EDT" finished-at="2019-10-11T17:12:44 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="9153" started-at="2019-10-11T17:12:44 EDT" finished-at="2019-10-11T17:12:53 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:12:53 EDT" finished-at="2019-10-11T17:12:53 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageTvs() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testImageTvs()[pri:22, instance:home.TestMouseHover@56ac3a89]" name="testImageTvs" duration-ms="32504" started-at="2019-10-11T17:12:53 EDT" finished-at="2019-10-11T17:13:26 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageTvs -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="801" started-at="2019-10-11T17:13:26 EDT" finished-at="2019-10-11T17:13:27 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageTvs status=SUCCESS method=TestMouseHover.testImageTvs()[pri:22, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="16752" started-at="2019-10-11T17:13:27 EDT" finished-at="2019-10-11T17:13:43 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:13:27 EDT" finished-at="2019-10-11T17:13:27 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-10-11T17:13:43 EDT" finished-at="2019-10-11T17:13:43 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageBeauty() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testImageBeauty()[pri:23, instance:home.TestMouseHover@56ac3a89]" name="testImageBeauty" duration-ms="31292" started-at="2019-10-11T17:13:43 EDT" finished-at="2019-10-11T17:14:15 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageBeauty -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="772" started-at="2019-10-11T17:14:15 EDT" finished-at="2019-10-11T17:14:16 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageBeauty status=SUCCESS method=TestMouseHover.testImageBeauty()[pri:23, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:14:16 EDT" finished-at="2019-10-11T17:14:16 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="setUp" is-config="true" duration-ms="15712" started-at="2019-10-11T17:14:16 EDT" finished-at="2019-10-11T17:14:31 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.costco.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-10-11T17:14:31 EDT" finished-at="2019-10-11T17:14:31 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestMouseHover.testImageThisWeeksLooks() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testImageThisWeeksLooks()[pri:24, instance:home.TestMouseHover@56ac3a89]" name="testImageThisWeeksLooks" duration-ms="24004" started-at="2019-10-11T17:14:31 EDT" finished-at="2019-10-11T17:14:55 EDT">
          <reporter-output>
            <line>
              <![CDATA[MouseHover: ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testImageThisWeeksLooks -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestMouseHover@56ac3a89]" name="afterEachTestMethod" is-config="true" duration-ms="803" started-at="2019-10-11T17:14:55 EDT" finished-at="2019-10-11T17:14:56 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImageThisWeeksLooks status=SUCCESS method=TestMouseHover.testImageThisWeeksLooks()[pri:24, instance:home.TestMouseHover@56ac3a89] output=MouseHover: ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-10-11T17:14:56 EDT" finished-at="2019-10-11T17:14:56 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:home.TestMouseHover@56ac3a89]" name="generateReport" is-config="true" duration-ms="32" started-at="2019-10-11T17:14:56 EDT" finished-at="2019-10-11T17:14:56 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- home.TestMouseHover -->
    </test> <!-- Costco Home -->
  </suite> <!-- Costco Automation Script  -->
</testng-results>
